"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 4.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-oss*i37pl-5mc==cvp+2b657z*&-g3tt%x1f8%jzd9uvb19ngp'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#HOST PERMITIDOS
ALLOWED_HOSTS = ["127.0.0.1","localhost"]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework.authtoken',
    'rest_framework',
    'corsheaders',
    'authentication',
    'accounts',
    'public',
    'users',
    'api',
]

#PLUGINS O MIDDLWARE
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

#CORS O CLIENTES PERMITIDOS
CORS_ORIGIN_WHITELIST = [
    "http://localhost:4200",
    "http://127.0.0.1:4200",
]

#ROOT URL O URL PRINCIPAL
ROOT_URLCONF = 'myproject.urls'

#TEMPLATES
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

#Web Server Gateway Interface\Interfaz de puerta de enlace del servidor web
WSGI_APPLICATION = 'myproject.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.mysql',
       'NAME': 'roboticaUTC',
       'USER':'root',
       'PASSWORD':'',
       'HOST':'localhost',
       'PORT':'3306',
       'OPTIONS': {
           'init_command': "SET sql_mode='STRICT_ALL_TABLES'"
        }
   }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/
"""
LANGUAGE_CODE = 'en-ec'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True
"""
LANGUAGE_CODE = 'es'
TIME_ZONE = 'America/Guayaquil'
USE_I18N = True
USE_L10N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/
STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Authentication config
#Modelo de autenticación
AUTH_USER_MODEL = 'users.Usuario'

#Tiempo de expiracion del TokenAuthentication
TOKEN_EXPIRED_AFTER_SECONDS = 259200 #permitido hasta tres dias

#AUTH_AUTHENTICATION_TYPE = Especificar por que tipo de autenticacion desea en el sistema.
#'both' se pueden autenticar por username o email y password.
#'username' se pueden autenticar por username y password.
#'email  o vacion u otro q no coinicda' se pueden autenticar por email y password.

#Tipo de autenticacion
AUTH_AUTHENTICATION_TYPE = 'both'

#La clase que valida la autenticación
AUTHENTICATION_BACKENDS = (
    'accounts.backends.EmailOrUsernameModelBackend',
)

# WARNING: Si modifica este siguiente apartado el proyeto podria dejar de funcionar
#--------------------------Configuration automatic (not modify)-----------------------
#recibe el tipo de autenticacion de AUTH_AUTHENTICATION_TYPE
auth_type = AUTH_AUTHENTICATION_TYPE
#Por defecto el campo para pedir las credenciales de acceso son username y password
NAME_USERNAME = ['username']
#Aqui validamos que tipo de autenticacion es para manadar el label a los formularios 
#de autenticacion y que la aplicacion sepa que pedir al usuario
if auth_type == 'username':
    NAME_USERNAME = ['username']
elif auth_type == 'both':
    NAME_USERNAME = ['username',' ','or',' ','email address']
else:
    NAME_USERNAME = ['email address']
#---------------------------------------------------------------------------------------
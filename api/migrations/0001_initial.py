# Generated by Django 4.0.1 on 2022-08-18 01:20

from django.db import migrations, models
import myproject.validators
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Archivo',
            fields=[
                ('id_arch', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('archivo_arch', models.FileField(blank=True, default='', help_text='Solo archivos PDF. Inválido el envío de múltiples archivos, si selecciona más de uno, se subirá el útlimo archivo enviado.', max_length=300, upload_to='Archivos/Proyectos/%Y/%m', validators=[myproject.validators.validate_file_extension], verbose_name='Archivo')),
            ],
            options={
                'verbose_name': 'Archivo',
                'verbose_name_plural': 'Archivos',
                'db_table': 'archivo',
                'ordering': ['id_arch'],
            },
        ),
        migrations.CreateModel(
            name='Articulo',
            fields=[
                ('id_art', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('titulo_art', models.CharField(max_length=200, verbose_name='Título')),
                ('enlace_art', models.URLField(max_length=500, verbose_name='Enlace')),
                ('indexacion_art', models.CharField(max_length=100, verbose_name='Indexación')),
                ('issn_art', models.CharField(help_text='Requerido. Formato: xxxx-xxxx', max_length=9, validators=[myproject.validators.ISSNNumberValidator()], verbose_name='ISSN')),
            ],
            options={
                'verbose_name': 'Artículo',
                'verbose_name_plural': 'Artículos',
                'db_table': 'articulo',
                'ordering': ['id_art'],
            },
        ),
        migrations.CreateModel(
            name='Capacitacion',
            fields=[
                ('id_cap', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('imagen_cap', models.ImageField(blank=True, default='', help_text='Solo Imágenes. Inválido el envío de múltiples imágenes, si selecciona más de una, se subirá la útlima imágen enviada.', max_length=300, upload_to='Imagenes/Capacitacion/%Y/%m', verbose_name='Imágen')),
                ('descripcion_cap', models.CharField(max_length=500, verbose_name='Descripción')),
                ('fecha_cap', models.DateField(help_text='Ingrese solo fechas mayores al año 2000 y menores al año actual.', validators=[myproject.validators.validate_fecha], verbose_name='Fecha')),
                ('tipo_cap', models.IntegerField(choices=[(0, 'Otros'), (1, 'Seminarios'), (2, 'Cursos'), (3, 'Webinars'), (4, 'Eventos')], default=0, verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Capacitación',
                'verbose_name_plural': 'Capacitaciones',
                'db_table': 'capacitacion',
                'ordering': ['id_cap'],
            },
        ),
        migrations.CreateModel(
            name='Carousel',
            fields=[
                ('id_car', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('titulopr_car', models.CharField(max_length=50, verbose_name='Título principal')),
                ('titulosec_car', models.CharField(max_length=50, verbose_name='Título secundario')),
                ('subtitulo_car', models.CharField(max_length=200, verbose_name='Subtítulo')),
                ('imagen_car', models.ImageField(blank=True, default='', help_text='Solo Imágenes. Inválido el envío de múltiples imágenes, si selecciona más de una, se subirá la útlima imágen enviada.', max_length=300, upload_to='Imagenes/Carousel/%Y/%m', verbose_name='Imágen')),
            ],
            options={
                'verbose_name': 'Carousel',
                'verbose_name_plural': 'Carousels',
                'db_table': 'carousel',
                'ordering': ['id_car'],
            },
        ),
        migrations.CreateModel(
            name='Congreso',
            fields=[
                ('id_con', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('titulo_con', models.CharField(max_length=200, verbose_name='Título')),
                ('anio_con', models.CharField(help_text='Ingrese solo años mayores a 2000 y menores al año actual.', max_length=4, validators=[myproject.validators.validate_anio], verbose_name='Año')),
                ('numero_con', models.CharField(help_text='Requerido. Ingrese solo numeros.', max_length=10, validators=[myproject.validators.NumberValidator()], verbose_name='Número de congreso')),
            ],
            options={
                'verbose_name': 'Congreso',
                'verbose_name_plural': 'Congresos',
                'db_table': 'congreso',
                'ordering': ['id_con'],
            },
        ),
        migrations.CreateModel(
            name='Libro',
            fields=[
                ('id_lib', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('titulo_lib', models.CharField(max_length=200, verbose_name='Título')),
                ('issn_lib', models.CharField(help_text='Requerido. Formato: xxxx-xxxx', max_length=9, validators=[myproject.validators.ISSNNumberValidator()], verbose_name='ISSN')),
                ('tipo_lib', models.IntegerField(choices=[(0, 'Otros'), (1, 'Libro'), (2, 'Capítulo de Libro')], default=0, verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Libro',
                'verbose_name_plural': 'Libros',
                'db_table': 'libro',
                'ordering': ['id_lib'],
            },
        ),
        migrations.CreateModel(
            name='Miembro',
            fields=[
                ('id_miem', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('nombre_miem', models.CharField(max_length=100, verbose_name='Nombres')),
                ('apellido_miem', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('correo_miem', models.CharField(error_messages={'unique': 'Ya existe un miembro con esta dirección de correo electrónico.'}, help_text='Requerido.', max_length=150, unique=True, validators=[myproject.validators.CustomEmailValidator()], verbose_name='Correo electrónico')),
                ('telefono_miem', models.CharField(help_text='Requerido. Formato: xxxxxxxxxx.', max_length=10, validators=[myproject.validators.PhoneNumberValidator()], verbose_name='Teléfono')),
                ('imagen_miem', models.ImageField(blank=True, default='', help_text='Solo Imágenes. Inválido el envío de múltiples imágenes, si selecciona más de una, se subirá la útlima imágen enviada.', max_length=300, upload_to='Imagenes/Miembros/%Y/%m', verbose_name='Foto')),
                ('cargo_miem', models.CharField(max_length=100, verbose_name='Cargo')),
                ('descripcion_miem', models.CharField(max_length=500, verbose_name='Descripción')),
                ('hvida_miem', models.FileField(blank=True, default='', help_text='Solo archivos PDF. Inválido el envío de múltiples archivos, si selecciona más de uno, se subirá el útlimo archivo enviado.', max_length=300, upload_to='Archivos/Miembros/%Y/%m', validators=[myproject.validators.validate_file_extension], verbose_name='Hoja de vida')),
                ('tipo_miem', models.IntegerField(choices=[(0, 'Otros'), (1, 'Miembro de interés'), (2, 'Colaborador')], default=0, verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Miembro',
                'verbose_name_plural': 'Miembros',
                'db_table': 'miembro',
                'ordering': ['id_miem'],
            },
        ),
        migrations.CreateModel(
            name='PIntelectual',
            fields=[
                ('id_pin', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('titulo_pin', models.CharField(max_length=200, verbose_name='Título')),
                ('fecha_pin', models.DateField(help_text='Ingrese solo fechas mayores al año 2000 y menores al año actual.', validators=[myproject.validators.validate_fecha], verbose_name='Fecha')),
            ],
            options={
                'verbose_name': 'P. Intelecutal',
                'verbose_name_plural': 'P. Intelectuales',
                'db_table': 'p_intelectual',
                'ordering': ['id_pin'],
            },
        ),
        migrations.CreateModel(
            name='Proyecto',
            fields=[
                ('id_pro', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('titulo_pro', models.CharField(max_length=200, verbose_name='Título')),
                ('fecha_pro', models.DateField(help_text='Ingrese solo fechas mayores al año 2000 y menores al año actual.', validators=[myproject.validators.validate_fecha], verbose_name='Fecha')),
                ('investigadores_pro', models.CharField(max_length=500, verbose_name='Investigadores')),
                ('descripcion_pro', models.CharField(max_length=500, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Proyecto',
                'verbose_name_plural': 'Proyectos',
                'db_table': 'proyecto',
                'ordering': ['id_pro'],
            },
        ),
        migrations.CreateModel(
            name='Tema',
            fields=[
                ('id_tem', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('nombre_tem', models.CharField(max_length=100, verbose_name='Tema')),
            ],
            options={
                'verbose_name': 'Tema',
                'verbose_name_plural': 'Temas',
                'db_table': 'tema',
                'ordering': ['id_tem'],
            },
        ),
        migrations.CreateModel(
            name='Tesis',
            fields=[
                ('id_tes', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='Código')),
                ('titulo_tes', models.CharField(max_length=200, verbose_name='Título')),
                ('anio_tes', models.CharField(help_text='Ingrese solo años mayores a 2000 y menores al año actual.', max_length=4, validators=[myproject.validators.validate_anio], verbose_name='Año')),
                ('directores_tes', models.CharField(max_length=500, verbose_name='Directores')),
                ('universidad_tes', models.CharField(max_length=200, verbose_name='Universidad')),
                ('tipo_tes', models.IntegerField(choices=[(0, 'Otros'), (1, 'Pregrado'), (2, 'Posgrado'), (3, 'Doctorado')], default=0, verbose_name='Tipo')),
                ('autores_tes', models.ManyToManyField(related_name='tesis', to='api.Miembro', verbose_name='Autores')),
            ],
            options={
                'verbose_name': 'Tesis',
                'verbose_name_plural': 'Tesis',
                'db_table': 'tesis',
                'ordering': ['id_tes'],
            },
        ),
    ]
